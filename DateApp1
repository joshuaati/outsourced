import tkinter as tk
from tkinter import ttk
import datetime as dt
from dateutil.relativedelta import relativedelta


LARGE_FONT = ("Verdana", 9)


class DateApp(tk.Tk):

    def __init__(self, *args, **kwargs):
        tk.Tk.__init__(self, *args, **kwargs)

        tk.Tk.iconbitmap(self, default="icon.ico")

        container = tk.Frame(self)
        container.pack(side="top", fill="both")
        container.grid_rowconfigure(0, weight=1)
        container.grid_columnconfigure(0, weight=1)

        self.frames = {}

        for F in (StartPage, PageOne):
            frame = F(container, self)
            self.frames[F] = frame
            frame.grid(row=0, column=0, sticky="nsew")

        self.show_frame(StartPage)

    def show_frame(self, cont):
        frame = self.frames[cont]
        frame.tkraise()


class StartPage(tk.Frame):
    def __init__(self, parent, controller):
        tk.Frame.__init__(self, parent)
        label = tk.Label(self, text="""This app is designed mainly for the purpose of Fun. 
        It calculates the number of days you have to the age you give it.
        
        To continue, click ENTER.""", font=LARGE_FONT)
        label.pack(pady=10, padx=10)
        button = ttk.Button(self, text="Enter", command=lambda: controller.show_frame(PageOne))
        button.pack(pady=1)
        button1 = ttk.Button(self, text="Exit", command=quit)
        button1.pack(pady=2)


class PageOne(tk.Frame):
    def __init__(self, parent, controller):
        tk.Frame.__init__(self, parent)

        tk.Label(self, text="Please insert date of your birth:").grid(row=1, column=2)
        tk.Label(self, text="Year(yyyy)").grid(row=2, column=1)
        tk.Label(self, text="Month(mm)").grid(row=2, column=2)
        tk.Label(self, text="Day(dd)").grid(row=2, column=3)
        tk.Label(self, text="Input the age you want the number of days to:").grid(row=5, column=2)

        self.year_entry = tk.StringVar()
        e1 = ttk.Entry(self, textvariable=self.year_entry, justify="center")
        e1.grid(row=3, column=1)

        self.month_entry = tk.StringVar()
        e2 = ttk.Entry(self, textvariable=self.month_entry, justify="center")
        e2.grid(row=3, column=2)

        self.day_entry = tk.StringVar()
        e3 = ttk.Entry(self, textvariable=self.day_entry, justify="center")
        e3.grid(row=3, column=3)

        self.nyear_entry = tk.StringVar()
        e4 = ttk.Entry(self, textvariable=self.nyear_entry, justify="center")
        e4.grid(row=6, column=2)

        b1 = ttk.Button(self, text="Calculate the number of days", command=self.age)
        b1.grid(row=10, column=2,)

        b2 = ttk.Button(self, text="Close", command=quit)
        b2.grid(row=10, column=3)

        b3 = ttk.Button(self, text="Calculate my Age", command=self.age2)
        b3.grid(row=10, column=1,)

        self.t1 = tk.Text(self, height=3, width=50)
        self.t1.grid(row=8, column=1, columnspan=3)
        self.t1.tag_configure('center', justify="center")

        c1 = tk.Canvas(self, height=2, width=40)
        c1.grid(row=0, column=2)

        c2 = tk.Canvas(self, height=2, width=40)
        c2.grid(row=4, column=2)

        c3 = tk.Canvas(self, height=2, width=40)
        c3.grid(row=7, column=2)

        c4 = tk.Canvas(self, height=2, width=40)
        c4.grid(row=9, column=2)

        c5 = tk.Canvas(self, height=2, width=40)
        c5.grid(row=11, column=2)

        c6 = tk.Canvas(self, height=20, width=10)
        c6.grid(row=5, column=0)

        c7 = tk.Canvas(self, height=20, width=10)
        c7.grid(row=5, column=4)

    def age(self,):
        try:
            date1 = dt.datetime(year=int(self.year_entry.get()), month=int(self.month_entry.get()), day=int(self.day_entry.get()))
            date2 = relativedelta(years=int(self.nyear_entry.get())) + date1
            date_delta = date2 - dt.datetime.now()
            statement = "You are approximately " \
                        + str(date_delta.days) + " days\naway from being " \
                        + str(self.nyear_entry.get()) + " years old...\n Your birthday would fall on a " \
                        + date2.strftime('%A')
            self.t1.delete('1.0', tk.END)
            self.t1.insert(tk.END, statement, 'center')
        except ValueError:
            pass

    def age2(self):
        try:
            date1 = dt.datetime(year=int(self.year_entry.get()), month=int(self.month_entry.get()), day=int(self.day_entry.get()))
            date2 = dt.datetime.now()
            date_delta = int((date2 - date1).days / 365.2425)
            statement2 = "You are " + str(date_delta) + " years old"
            self.t1.delete('1.0', tk.END)
            self.t1.insert(tk.END, statement2, 'center')
        except ValueError:
            pass



app = DateApp()
app.mainloop()
